# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IDqolJpPv4Qq7OJ082weshPNy0eLPevc
"""

def read_int(prompt):
    raw_value = input(prompt).strip().replace(" ", "")
    if not raw_value.isdigit():
        raise ValueError("Contacts must be a non-negative integer (e.g., 10000).")
    return int(raw_value)

def parse_rate(prompt):
    raw = input(prompt).strip().replace(" ", "").replace(",", ".")
    if raw.endswith("%"):
        raw_num = raw[:-1]
        value = float(raw_num) / 100.0
    else:
        value = float(raw)
        if value > 1:
            value = value / 100.0
    if not (0.0 <= value <= 1.0):
        raise ValueError("Rate must be between 0 and 1 (e.g., 0.30 or 30%).")
    return value

def compute_sales(contacts, open_rate, click_rate, conv_rate):
    opened = contacts * open_rate
    clicks = opened * click_rate
    sales_float = clicks * conv_rate
    sales = int(round(sales_float))
    return {
        "contacts": contacts,
        "opened": opened,
        "clicks": clicks,
        "estimated_sales": sales,
        "open_rate": open_rate,
        "click_rate": click_rate,
        "conv_rate": conv_rate
    }

def print_report(res):
    def fmt_n(x):
        return f"{int(round(x)):,}".replace(",", ".")
    def fmt_p(x):
        return f"{x*100:.1f}%"

    print("\n=== Campaign Estimate: TechDynamics (Smartwatch) ===")
    print(f"Contacts sent:           {fmt_n(res['contacts'])}")
    print(f"Open rate:               {fmt_p(res['open_rate'])}")
    print(f"Emails opened:           {fmt_n(res['opened'])}")
    print(f"Click-through rate (CTR):{fmt_p(res['click_rate'])}")
    print(f"Clicks:                  {fmt_n(res['clicks'])}")
    print(f"Conversion rate:         {fmt_p(res['conv_rate'])}")
    print(f"Estimated sales:         {fmt_n(res['estimated_sales'])}")
    print("====================================================\n")

def main():
    print("Email Marketing Campaign Simulator - TechDynamics")
    print("Enter values below. Rates can be decimal (0.30) or percentage (30%).\n")
    try:
        contacts   = read_int("Number of contacts reached: ")
        open_rate  = parse_rate("Open rate (e.g., 0.30 or 30%): ")
        click_rate = parse_rate("Click-through rate (CTR) (e.g., 0.05 or 5%): ")
        conv_rate  = parse_rate("Conversion rate (e.g., 0.02 or 2%): ")

        results = compute_sales(contacts, open_rate, click_rate, conv_rate)
        print_report(results)

    except ValueError as e:
        print(f"\n[ERROR] {e}")
    except Exception as e:
        print(f"\n[UNEXPECTED ERROR] {e}")

if __name__ == "__main__":
    main()